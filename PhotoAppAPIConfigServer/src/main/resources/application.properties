spring.application.name=PhotoAppAPIConfigServer
server.port=8012
spring.profiles.active=git

#spring.cloud.config.server.native.searchLocations=file://${user.home}/Desktop/dev/config-server-nfs

spring.cloud.config.server.git.uri=git@github.com:zkvarz/PhotoAppConfiguration.git
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.force-pull=true
spring.cloud.config.server.git.default-label=main
#spring.cloud.config.server.git.searchPaths=usersws,zuul
spring.cloud.config.server.git.ignore-local-ssh-settings=true

#Make sure to generate RSA keys in PEM format! Here is the command I used: ssh-keygen -m PEM -t rsa -b 4096
spring.cloud.config.server.git.private-key=\
-----BEGIN RSA PRIVATE KEY-----\n\
YOURKEY3\n\
YOURKEY3\n\
-----END RSA PRIVATE KEY-----

#Public cloud config example. Useful for testing:
#spring.cloud.config.server.git.uri=https://github.com/spring-cloud-samples/config-repo
#Location where properties will be stored:
#spring.cloud.config.server.git.basedir=target/config
#spring.cloud.config.server.git.default-label=main
#spring.cloud.config.server.git.clone-on-start=true
#spring.cloud.config.server.git.force-pull=true

management.endpoints.web.exposure.include=bus-refresh

#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

logging.level.root=INFO
logging.level.org.springframework.cloud=TRACE